// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/FrecencyUserSettings.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")

@JvmName("-initializefrecencyUserSettings")
public inline fun frecencyUserSettings(block: FrecencyUserSettingsKt.Dsl.() -> Unit): FrecencyUserSettingsOuterClass.FrecencyUserSettings =
    FrecencyUserSettingsKt.Dsl._create(FrecencyUserSettingsOuterClass.FrecencyUserSettings.newBuilder()).apply { block() }._build()

/**
 * Protobuf type `FrecencyUserSettings`
 */
public object FrecencyUserSettingsKt {
    @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.Builder) {
        public companion object {
            @JvmSynthetic
            @PublishedApi
            internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.Builder): Dsl = Dsl(builder)
        }

        @JvmSynthetic
        @PublishedApi
        internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings = _builder.build()

        /**
         * `optional .FrecencyUserSettings.Versions versions = 1;`
         */
        public var versions: FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions
            @JvmName("getVersions")
            get() = _builder.versions

            @JvmName("setVersions")
            set(value) {
                _builder.versions = value
            }

        /**
         * `optional .FrecencyUserSettings.Versions versions = 1;`
         */
        public fun clearVersions() {
            _builder.clearVersions()
        }

        /**
         * `optional .FrecencyUserSettings.Versions versions = 1;`
         * @return Whether the versions field is set.
         */
        public fun hasVersions(): kotlin.Boolean {
            return _builder.hasVersions()
        }

        public val FrecencyUserSettingsKt.Dsl.versionsOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions?
            get() = _builder.versionsOrNull

        /**
         * `optional .FrecencyUserSettings.FavoriteGIFs favorite_gifs = 2;`
         */
        public var favoriteGifs: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs
            @JvmName("getFavoriteGifs")
            get() = _builder.favoriteGifs

            @JvmName("setFavoriteGifs")
            set(value) {
                _builder.favoriteGifs = value
            }

        /**
         * `optional .FrecencyUserSettings.FavoriteGIFs favorite_gifs = 2;`
         */
        public fun clearFavoriteGifs() {
            _builder.clearFavoriteGifs()
        }

        /**
         * `optional .FrecencyUserSettings.FavoriteGIFs favorite_gifs = 2;`
         * @return Whether the favoriteGifs field is set.
         */
        public fun hasFavoriteGifs(): kotlin.Boolean {
            return _builder.hasFavoriteGifs()
        }

        public val FrecencyUserSettingsKt.Dsl.favoriteGifsOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs?
            get() = _builder.favoriteGifsOrNull

        /**
         * `optional .FrecencyUserSettings.FavoriteStickers favorite_stickers = 3;`
         */
        public var favoriteStickers: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers
            @JvmName("getFavoriteStickers")
            get() = _builder.favoriteStickers

            @JvmName("setFavoriteStickers")
            set(value) {
                _builder.favoriteStickers = value
            }

        /**
         * `optional .FrecencyUserSettings.FavoriteStickers favorite_stickers = 3;`
         */
        public fun clearFavoriteStickers() {
            _builder.clearFavoriteStickers()
        }

        /**
         * `optional .FrecencyUserSettings.FavoriteStickers favorite_stickers = 3;`
         * @return Whether the favoriteStickers field is set.
         */
        public fun hasFavoriteStickers(): kotlin.Boolean {
            return _builder.hasFavoriteStickers()
        }

        public val FrecencyUserSettingsKt.Dsl.favoriteStickersOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers?
            get() = _builder.favoriteStickersOrNull

        /**
         * `optional .FrecencyUserSettings.StickerFrecency sticker_frecency = 4;`
         */
        public var stickerFrecency: FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency
            @JvmName("getStickerFrecency")
            get() = _builder.stickerFrecency

            @JvmName("setStickerFrecency")
            set(value) {
                _builder.stickerFrecency = value
            }

        /**
         * `optional .FrecencyUserSettings.StickerFrecency sticker_frecency = 4;`
         */
        public fun clearStickerFrecency() {
            _builder.clearStickerFrecency()
        }

        /**
         * `optional .FrecencyUserSettings.StickerFrecency sticker_frecency = 4;`
         * @return Whether the stickerFrecency field is set.
         */
        public fun hasStickerFrecency(): kotlin.Boolean {
            return _builder.hasStickerFrecency()
        }

        public val FrecencyUserSettingsKt.Dsl.stickerFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency?
            get() = _builder.stickerFrecencyOrNull

        /**
         * `optional .FrecencyUserSettings.FavoriteEmojis favorite_emojis = 5;`
         */
        public var favoriteEmojis: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis
            @JvmName("getFavoriteEmojis")
            get() = _builder.favoriteEmojis

            @JvmName("setFavoriteEmojis")
            set(value) {
                _builder.favoriteEmojis = value
            }

        /**
         * `optional .FrecencyUserSettings.FavoriteEmojis favorite_emojis = 5;`
         */
        public fun clearFavoriteEmojis() {
            _builder.clearFavoriteEmojis()
        }

        /**
         * `optional .FrecencyUserSettings.FavoriteEmojis favorite_emojis = 5;`
         * @return Whether the favoriteEmojis field is set.
         */
        public fun hasFavoriteEmojis(): kotlin.Boolean {
            return _builder.hasFavoriteEmojis()
        }

        public val FrecencyUserSettingsKt.Dsl.favoriteEmojisOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis?
            get() = _builder.favoriteEmojisOrNull

        /**
         * `optional .FrecencyUserSettings.EmojiFrecency emoji_frecency = 6;`
         */
        public var emojiFrecency: FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency
            @JvmName("getEmojiFrecency")
            get() = _builder.emojiFrecency

            @JvmName("setEmojiFrecency")
            set(value) {
                _builder.emojiFrecency = value
            }

        /**
         * `optional .FrecencyUserSettings.EmojiFrecency emoji_frecency = 6;`
         */
        public fun clearEmojiFrecency() {
            _builder.clearEmojiFrecency()
        }

        /**
         * `optional .FrecencyUserSettings.EmojiFrecency emoji_frecency = 6;`
         * @return Whether the emojiFrecency field is set.
         */
        public fun hasEmojiFrecency(): kotlin.Boolean {
            return _builder.hasEmojiFrecency()
        }

        public val FrecencyUserSettingsKt.Dsl.emojiFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency?
            get() = _builder.emojiFrecencyOrNull

        /**
         * `optional .FrecencyUserSettings.ApplicationCommandFrecency application_command_frecency = 7;`
         */
        public var applicationCommandFrecency: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency
            @JvmName("getApplicationCommandFrecency")
            get() = _builder.applicationCommandFrecency

            @JvmName("setApplicationCommandFrecency")
            set(value) {
                _builder.applicationCommandFrecency = value
            }

        /**
         * `optional .FrecencyUserSettings.ApplicationCommandFrecency application_command_frecency = 7;`
         */
        public fun clearApplicationCommandFrecency() {
            _builder.clearApplicationCommandFrecency()
        }

        /**
         * `optional .FrecencyUserSettings.ApplicationCommandFrecency application_command_frecency = 7;`
         * @return Whether the applicationCommandFrecency field is set.
         */
        public fun hasApplicationCommandFrecency(): kotlin.Boolean {
            return _builder.hasApplicationCommandFrecency()
        }

        public val FrecencyUserSettingsKt.Dsl.applicationCommandFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency?
            get() = _builder.applicationCommandFrecencyOrNull

        /**
         * `optional .FrecencyUserSettings.FavoriteSoundboardSounds favorite_soundboard_sounds = 8;`
         */
        public var favoriteSoundboardSounds: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds
            @JvmName("getFavoriteSoundboardSounds")
            get() = _builder.favoriteSoundboardSounds

            @JvmName("setFavoriteSoundboardSounds")
            set(value) {
                _builder.favoriteSoundboardSounds = value
            }

        /**
         * `optional .FrecencyUserSettings.FavoriteSoundboardSounds favorite_soundboard_sounds = 8;`
         */
        public fun clearFavoriteSoundboardSounds() {
            _builder.clearFavoriteSoundboardSounds()
        }

        /**
         * `optional .FrecencyUserSettings.FavoriteSoundboardSounds favorite_soundboard_sounds = 8;`
         * @return Whether the favoriteSoundboardSounds field is set.
         */
        public fun hasFavoriteSoundboardSounds(): kotlin.Boolean {
            return _builder.hasFavoriteSoundboardSounds()
        }

        public val FrecencyUserSettingsKt.Dsl.favoriteSoundboardSoundsOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds?
            get() = _builder.favoriteSoundboardSoundsOrNull

        /**
         * `optional .FrecencyUserSettings.ApplicationFrecency application_frecency = 9;`
         */
        public var applicationFrecency: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency
            @JvmName("getApplicationFrecency")
            get() = _builder.applicationFrecency

            @JvmName("setApplicationFrecency")
            set(value) {
                _builder.applicationFrecency = value
            }

        /**
         * `optional .FrecencyUserSettings.ApplicationFrecency application_frecency = 9;`
         */
        public fun clearApplicationFrecency() {
            _builder.clearApplicationFrecency()
        }

        /**
         * `optional .FrecencyUserSettings.ApplicationFrecency application_frecency = 9;`
         * @return Whether the applicationFrecency field is set.
         */
        public fun hasApplicationFrecency(): kotlin.Boolean {
            return _builder.hasApplicationFrecency()
        }

        public val FrecencyUserSettingsKt.Dsl.applicationFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency?
            get() = _builder.applicationFrecencyOrNull

        /**
         * `optional .FrecencyUserSettings.HeardSoundFrecency heard_sound_frecency = 10;`
         */
        public var heardSoundFrecency: FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency
            @JvmName("getHeardSoundFrecency")
            get() = _builder.heardSoundFrecency

            @JvmName("setHeardSoundFrecency")
            set(value) {
                _builder.heardSoundFrecency = value
            }

        /**
         * `optional .FrecencyUserSettings.HeardSoundFrecency heard_sound_frecency = 10;`
         */
        public fun clearHeardSoundFrecency() {
            _builder.clearHeardSoundFrecency()
        }

        /**
         * `optional .FrecencyUserSettings.HeardSoundFrecency heard_sound_frecency = 10;`
         * @return Whether the heardSoundFrecency field is set.
         */
        public fun hasHeardSoundFrecency(): kotlin.Boolean {
            return _builder.hasHeardSoundFrecency()
        }

        public val FrecencyUserSettingsKt.Dsl.heardSoundFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency?
            get() = _builder.heardSoundFrecencyOrNull

        /**
         * `optional .FrecencyUserSettings.PlayedSoundFrecency played_sound_frecency = 11;`
         */
        public var playedSoundFrecency: FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency
            @JvmName("getPlayedSoundFrecency")
            get() = _builder.playedSoundFrecency

            @JvmName("setPlayedSoundFrecency")
            set(value) {
                _builder.playedSoundFrecency = value
            }

        /**
         * `optional .FrecencyUserSettings.PlayedSoundFrecency played_sound_frecency = 11;`
         */
        public fun clearPlayedSoundFrecency() {
            _builder.clearPlayedSoundFrecency()
        }

        /**
         * `optional .FrecencyUserSettings.PlayedSoundFrecency played_sound_frecency = 11;`
         * @return Whether the playedSoundFrecency field is set.
         */
        public fun hasPlayedSoundFrecency(): kotlin.Boolean {
            return _builder.hasPlayedSoundFrecency()
        }

        public val FrecencyUserSettingsKt.Dsl.playedSoundFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency?
            get() = _builder.playedSoundFrecencyOrNull

        /**
         * `optional .FrecencyUserSettings.GuildAndChannelFrecency guild_and_channel_frecency = 12;`
         */
        public var guildAndChannelFrecency: FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency
            @JvmName("getGuildAndChannelFrecency")
            get() = _builder.guildAndChannelFrecency

            @JvmName("setGuildAndChannelFrecency")
            set(value) {
                _builder.guildAndChannelFrecency = value
            }

        /**
         * `optional .FrecencyUserSettings.GuildAndChannelFrecency guild_and_channel_frecency = 12;`
         */
        public fun clearGuildAndChannelFrecency() {
            _builder.clearGuildAndChannelFrecency()
        }

        /**
         * `optional .FrecencyUserSettings.GuildAndChannelFrecency guild_and_channel_frecency = 12;`
         * @return Whether the guildAndChannelFrecency field is set.
         */
        public fun hasGuildAndChannelFrecency(): kotlin.Boolean {
            return _builder.hasGuildAndChannelFrecency()
        }

        public val FrecencyUserSettingsKt.Dsl.guildAndChannelFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency?
            get() = _builder.guildAndChannelFrecencyOrNull

        /**
         * `optional .FrecencyUserSettings.EmojiFrecency emoji_reaction_frecency = 13;`
         */
        public var emojiReactionFrecency: FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency
            @JvmName("getEmojiReactionFrecency")
            get() = _builder.emojiReactionFrecency

            @JvmName("setEmojiReactionFrecency")
            set(value) {
                _builder.emojiReactionFrecency = value
            }

        /**
         * `optional .FrecencyUserSettings.EmojiFrecency emoji_reaction_frecency = 13;`
         */
        public fun clearEmojiReactionFrecency() {
            _builder.clearEmojiReactionFrecency()
        }

        /**
         * `optional .FrecencyUserSettings.EmojiFrecency emoji_reaction_frecency = 13;`
         * @return Whether the emojiReactionFrecency field is set.
         */
        public fun hasEmojiReactionFrecency(): kotlin.Boolean {
            return _builder.hasEmojiReactionFrecency()
        }

        public val FrecencyUserSettingsKt.Dsl.emojiReactionFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency?
            get() = _builder.emojiReactionFrecencyOrNull
    }

    @JvmName("-initializeversions")
    public inline fun versions(
        block: FrecencyUserSettingsKt.VersionsKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions =
        FrecencyUserSettingsKt.VersionsKt.Dsl._create(FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions.newBuilder()).apply {
            block()
        }._build()

    /**
     * Protobuf type `FrecencyUserSettings.Versions`
     */
    public object VersionsKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        public class Dsl private constructor(private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions.Builder) {
            public companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions.Builder): Dsl = Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions = _builder.build()

            /**
             * <code>uint32 client_version = 1;</code>
             */
            public var clientVersion: Int
                @JvmName("getClientVersion")
                get() = _builder.clientVersion

                @JvmName("setClientVersion")
                set(value) {
                    _builder.clientVersion = value
                }

            /**
             * `uint32 client_version = 1;`
             */
            public fun clearClientVersion() {
                _builder.clearClientVersion()
            }

            /**
             * <code>uint32 server_version = 2;</code>
             */
            public var serverVersion: Int
                @JvmName("getServerVersion")
                get() = _builder.serverVersion

                @JvmName("setServerVersion")
                set(value) {
                    _builder.serverVersion = value
                }

            /**
             * `uint32 server_version = 2;`
             */
            public fun clearServerVersion() {
                _builder.clearServerVersion()
            }

            /**
             * <code>uint32 data_version = 3;</code>
             */
            public var dataVersion: Int
                @JvmName("getDataVersion")
                get() = _builder.dataVersion

                @JvmName("setDataVersion")
                set(value) {
                    _builder.dataVersion = value
                }

            /**
             * `uint32 data_version = 3;`
             */
            public fun clearDataVersion() {
                _builder.clearDataVersion()
            }
        }
    }

    @JvmName("-initializefavoriteGIF")
    public inline fun favoriteGIF(
        block: FrecencyUserSettingsKt.FavoriteGIFKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF = FrecencyUserSettingsKt.FavoriteGIFKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.FavoriteGIF`
     */
    public object FavoriteGIFKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        public class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF.Builder
        ) {
            public companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF.Builder): Dsl = Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF = _builder.build()

            /**
             * `.FrecencyUserSettings.GIFType format = 1;`
             */
            public var format: FrecencyUserSettingsOuterClass.FrecencyUserSettings.GIFType
                @JvmName("getFormat")
                get() = _builder.format

                @JvmName("setFormat")
                set(value) {
                    _builder.format = value
                }
            public var formatValue: Int
                @JvmName("getFormatValue")
                get() = _builder.formatValue

                @JvmName("setFormatValue")
                set(value) {
                    _builder.formatValue = value
                }

            /**
             * `.FrecencyUserSettings.GIFType format = 1;`
             */
            public fun clearFormat() {
                _builder.clearFormat()
            }

            /**
             * `string src = 2;`
             */
            public var src: String
                @JvmName("getSrc")
                get() = _builder.src

                @JvmName("setSrc")
                set(value) {
                    _builder.src = value
                }

            /**
             * `string src = 2;`
             */
            public fun clearSrc() {
                _builder.clearSrc()
            }

            /**
             * <code>uint32 width = 3;</code>
             */
            public var width: Int
                @JvmName("getWidth")
                get() = _builder.width

                @JvmName("setWidth")
                set(value) {
                    _builder.width = value
                }

            /**
             * `uint32 width = 3;`
             */
            public fun clearWidth() {
                _builder.clearWidth()
            }

            /**
             * <code>uint32 height = 4;</code>
             */
            public var height: Int
                @JvmName("getHeight")
                get() = _builder.height

                @JvmName("setHeight")
                set(value) {
                    _builder.height = value
                }

            /**
             * `uint32 height = 4;`
             */
            public fun clearHeight() {
                _builder.clearHeight()
            }

            /**
             * <code>uint32 order = 5;</code>
             */
            public var order: Int
                @JvmName("getOrder")
                get() = _builder.order

                @JvmName("setOrder")
                set(value) {
                    _builder.order = value
                }

            /**
             * `uint32 order = 5;`
             */
            public fun clearOrder() {
                _builder.clearOrder()
            }
        }
    }

    @JvmName("-initializefavoriteGIFs")
    public inline fun favoriteGIFs(
        block: FrecencyUserSettingsKt.FavoriteGIFsKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs = FrecencyUserSettingsKt.FavoriteGIFsKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.FavoriteGIFs`
     */
    public object FavoriteGIFsKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        public class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs.Builder
        ) {
            public companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs.Builder): Dsl = Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            public class GifsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `map<string, .FrecencyUserSettings.FavoriteGIF> gifs = 1;`
             */
            public val gifs:
                com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF, GifsProxy>
                @JvmSynthetic
                @JvmName("getGifsMap")
                get() = com.google.protobuf.kotlin.DslMap(
                    _builder.gifsMap
                )

            /**
             * `map<string, .FrecencyUserSettings.FavoriteGIF> gifs = 1;`
             */
            @JvmName("putGifs")
            public fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF, GifsProxy>.put(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF
            ) {
                _builder.putGifs(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FavoriteGIF> gifs = 1;`
             */
            @JvmSynthetic
            @JvmName("setGifs")
            @Suppress("NOTHING_TO_INLINE")
            public inline operator fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF, GifsProxy>.set(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF
            ) {
                put(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FavoriteGIF> gifs = 1;`
             */
            @JvmSynthetic
            @JvmName("removeGifs")
            public fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF, GifsProxy>.remove(
                key: String
            ) {
                _builder.removeGifs(key)
            }

            /**
             * `map<string, .FrecencyUserSettings.FavoriteGIF> gifs = 1;`
             */
            @JvmSynthetic
            @JvmName("putAllGifs")
            public fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF, GifsProxy>.putAll(
                map: kotlin.collections.Map<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF>
            ) {
                _builder.putAllGifs(map)
            }

            /**
             * `map<string, .FrecencyUserSettings.FavoriteGIF> gifs = 1;`
             */
            @JvmSynthetic
            @JvmName("clearGifs")
            public fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF, GifsProxy>.clear() {
                _builder.clearGifs()
            }

            /**
             * <code>bool hide_tooltip = 2;</code>
             */
            public var hideTooltip: kotlin.Boolean
                @JvmName("getHideTooltip")
                get() = _builder.hideTooltip

                @JvmName("setHideTooltip")
                set(value) {
                    _builder.hideTooltip = value
                }

            /**
             * `bool hide_tooltip = 2;`
             */
            public fun clearHideTooltip() {
                _builder.clearHideTooltip()
            }
        }
    }

    @JvmName("-initializefavoriteStickers")
    public inline fun favoriteStickers(
        block: FrecencyUserSettingsKt.FavoriteStickersKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers = FrecencyUserSettingsKt.FavoriteStickersKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.FavoriteStickers`
     */
    public object FavoriteStickersKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        public class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers.Builder
        ) {
            public companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            public class StickerIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * <code>repeated fixed64 sticker_ids = 1;</code>
             */
            public val stickerIds: com.google.protobuf.kotlin.DslList<Long, StickerIdsProxy>
                @JvmSynthetic
                get() = com.google.protobuf.kotlin.DslList(
                    _builder.stickerIdsList
                )

            /**
             * `repeated fixed64 sticker_ids = 1;`
             * @param value The stickerIds to add.
             */
            @JvmSynthetic
            @JvmName("addStickerIds")
            public fun com.google.protobuf.kotlin.DslList<Long, StickerIdsProxy>.add(value: Long) {
                _builder.addStickerIds(value)
            }

            /**
             * `repeated fixed64 sticker_ids = 1;`
             * @param value The stickerIds to add.
             */
            @JvmSynthetic
            @JvmName("plusAssignStickerIds")
            @Suppress("NOTHING_TO_INLINE")
            public inline operator fun com.google.protobuf.kotlin.DslList<Long, StickerIdsProxy>.plusAssign(value: Long) {
                add(value)
            }

            /**
             * `repeated fixed64 sticker_ids = 1;`
             * @param values The stickerIds to add.
             */
            @JvmSynthetic
            @JvmName("addAllStickerIds")
            public fun com.google.protobuf.kotlin.DslList<Long, StickerIdsProxy>.addAll(values: Iterable<Long>) {
                _builder.addAllStickerIds(values)
            }

            /**
             * `repeated fixed64 sticker_ids = 1;`
             * @param values The stickerIds to add.
             */
            @JvmSynthetic
            @JvmName("plusAssignAllStickerIds")
            @Suppress("NOTHING_TO_INLINE")
            public inline operator fun com.google.protobuf.kotlin.DslList<Long, StickerIdsProxy>.plusAssign(values: Iterable<Long>) {
                addAll(values)
            }

            /**
             * `repeated fixed64 sticker_ids = 1;`
             * @param index The index to set the value at.
             * @param value The stickerIds to set.
             */
            @JvmSynthetic
            @JvmName("setStickerIds")
            public operator fun com.google.protobuf.kotlin.DslList<Long, StickerIdsProxy>.set(index: Int, value: Long) {
                _builder.setStickerIds(index, value)
            }

            /**
             * `repeated fixed64 sticker_ids = 1;`
             */
            @JvmSynthetic
            @JvmName("clearStickerIds")
            public fun com.google.protobuf.kotlin.DslList<Long, StickerIdsProxy>.clear() {
                _builder.clearStickerIds()
            }
        }
    }

    @JvmName("-initializefrecencyItem")
    public inline fun frecencyItem(
        block: FrecencyUserSettingsKt.FrecencyItemKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem = FrecencyUserSettingsKt.FrecencyItemKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.FrecencyItem`
     */
    public object FrecencyItemKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        public class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem.Builder
        ) {
            public companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem.Builder): Dsl = Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem = _builder.build()

            /**
             * <code>uint32 total_uses = 1;</code>
             */
            public var totalUses: Int
                @JvmName("getTotalUses")
                get() = _builder.totalUses

                @JvmName("setTotalUses")
                set(value) {
                    _builder.totalUses = value
                }

            /**
             * `uint32 total_uses = 1;`
             */
            public fun clearTotalUses() {
                _builder.clearTotalUses()
            }

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            public class RecentUsesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * <code>repeated uint64 recent_uses = 2;</code>
             */
            public val recentUses: com.google.protobuf.kotlin.DslList<Long, RecentUsesProxy>
                @JvmSynthetic
                get() = com.google.protobuf.kotlin.DslList(
                    _builder.recentUsesList
                )

            /**
             * `repeated uint64 recent_uses = 2;`
             * @param value The recentUses to add.
             */
            @JvmSynthetic
            @JvmName("addRecentUses")
            public fun com.google.protobuf.kotlin.DslList<Long, RecentUsesProxy>.add(value: Long) {
                _builder.addRecentUses(value)
            }

            /**
             * `repeated uint64 recent_uses = 2;`
             * @param value The recentUses to add.
             */
            @JvmSynthetic
            @JvmName("plusAssignRecentUses")
            @Suppress("NOTHING_TO_INLINE")
            public inline operator fun com.google.protobuf.kotlin.DslList<Long, RecentUsesProxy>.plusAssign(value: Long) {
                add(value)
            }

            /**
             * `repeated uint64 recent_uses = 2;`
             * @param values The recentUses to add.
             */
            @JvmSynthetic
            @JvmName("addAllRecentUses")
            public fun com.google.protobuf.kotlin.DslList<Long, RecentUsesProxy>.addAll(values: Iterable<Long>) {
                _builder.addAllRecentUses(values)
            }

            /**
             * `repeated uint64 recent_uses = 2;`
             * @param values The recentUses to add.
             */
            @JvmSynthetic
            @JvmName("plusAssignAllRecentUses")
            @Suppress("NOTHING_TO_INLINE")
            public inline operator fun com.google.protobuf.kotlin.DslList<Long, RecentUsesProxy>.plusAssign(values: Iterable<Long>) {
                addAll(values)
            }

            /**
             * `repeated uint64 recent_uses = 2;`
             * @param index The index to set the value at.
             * @param value The recentUses to set.
             */
            @JvmSynthetic
            @JvmName("setRecentUses")
            public operator fun com.google.protobuf.kotlin.DslList<Long, RecentUsesProxy>.set(index: Int, value: Long) {
                _builder.setRecentUses(index, value)
            }

            /**
             * `repeated uint64 recent_uses = 2;`
             */
            @JvmSynthetic
            @JvmName("clearRecentUses")
            public fun com.google.protobuf.kotlin.DslList<Long, RecentUsesProxy>.clear() {
                _builder.clearRecentUses()
            }

            /**
             * <code>int32 frecency = 3;</code>
             */
            public var frecency: Int
                @JvmName("getFrecency")
                get() = _builder.frecency

                @JvmName("setFrecency")
                set(value) {
                    _builder.frecency = value
                }

            /**
             * `int32 frecency = 3;`
             */
            public fun clearFrecency() {
                _builder.clearFrecency()
            }

            /**
             * <code>int32 score = 4;</code>
             */
            public var score: Int
                @JvmName("getScore")
                get() = _builder.score

                @JvmName("setScore")
                set(value) {
                    _builder.score = value
                }

            /**
             * `int32 score = 4;`
             */
            public fun clearScore() {
                _builder.clearScore()
            }
        }
    }

    @JvmName("-initializestickerFrecency")
    public inline fun stickerFrecency(
        block: FrecencyUserSettingsKt.StickerFrecencyKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency = FrecencyUserSettingsKt.StickerFrecencyKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.StickerFrecency`
     */
    public object StickerFrecencyKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        public class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency.Builder
        ) {
            public companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            public class StickersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> stickers = 1;`
             */
            public val stickers:
                com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, StickersProxy>
                @JvmSynthetic
                @JvmName("getStickersMap")
                get() = com.google.protobuf.kotlin.DslMap(
                    _builder.stickersMap
                )

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> stickers = 1;`
             */
            @JvmName("putStickers")
            public fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, StickersProxy>.put(
                key: Long,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                _builder.putStickers(key, value)
            }

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> stickers = 1;`
             */
            @JvmSynthetic
            @JvmName("setStickers")
            @Suppress("NOTHING_TO_INLINE")
            public inline operator fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, StickersProxy>.set(
                key: Long,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                put(key, value)
            }

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> stickers = 1;`
             */
            @JvmSynthetic
            @JvmName("removeStickers")
            public fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, StickersProxy>.remove(
                key: Long
            ) {
                _builder.removeStickers(key)
            }

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> stickers = 1;`
             */
            @JvmSynthetic
            @JvmName("putAllStickers")
            public fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, StickersProxy>.putAll(
                map: Map<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem>
            ) {
                _builder.putAllStickers(map)
            }

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> stickers = 1;`
             */
            @JvmSynthetic
            @JvmName("clearStickers")
            public fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, StickersProxy>.clear() {
                _builder.clearStickers()
            }
        }
    }

    @JvmName("-initializefavoriteEmojis")
    public inline fun favoriteEmojis(
        block: FrecencyUserSettingsKt.FavoriteEmojisKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis = FrecencyUserSettingsKt.FavoriteEmojisKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.FavoriteEmojis`
     */
    public object FavoriteEmojisKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        public class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis.Builder
        ) {
            public companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            public class EmojisProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `repeated string emojis = 1;`
             * @return A list containing the emojis.
             */
            public val emojis: com.google.protobuf.kotlin.DslList<String, EmojisProxy>
                @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
                get() = com.google.protobuf.kotlin.DslList(
                    _builder.emojisList
                )

            /**
             * `repeated string emojis = 1;`
             * @param value The emojis to add.
             */
            @JvmSynthetic
            @JvmName("addEmojis")
            public fun com.google.protobuf.kotlin.DslList<String, EmojisProxy>.add(value: String) {
                _builder.addEmojis(value)
            }

            /**
             * `repeated string emojis = 1;`
             * @param value The emojis to add.
             */
            @JvmSynthetic
            @JvmName("plusAssignEmojis")
            @Suppress("NOTHING_TO_INLINE")
            public inline operator fun com.google.protobuf.kotlin.DslList<String, EmojisProxy>.plusAssign(value: String) {
                add(value)
            }

            /**
             * `repeated string emojis = 1;`
             * @param values The emojis to add.
             */
            @JvmSynthetic
            @JvmName("addAllEmojis")
            public fun com.google.protobuf.kotlin.DslList<String, EmojisProxy>.addAll(values: kotlin.collections.Iterable<String>) {
                _builder.addAllEmojis(values)
            }

            /**
             * `repeated string emojis = 1;`
             * @param values The emojis to add.
             */
            @JvmSynthetic
            @JvmName("plusAssignAllEmojis")
            @Suppress("NOTHING_TO_INLINE")
            public inline operator fun com.google.protobuf.kotlin.DslList<String, EmojisProxy>.plusAssign(
                values: kotlin.collections.Iterable<String>
            ) {
                addAll(values)
            }

            /**
             * `repeated string emojis = 1;`
             * @param index The index to set the value at.
             * @param value The emojis to set.
             */
            @JvmSynthetic
            @JvmName("setEmojis")
            public operator fun com.google.protobuf.kotlin.DslList<String, EmojisProxy>.set(index: Int, value: String) {
                _builder.setEmojis(index, value)
            }

            /**
             * `repeated string emojis = 1;`
             */
            @JvmSynthetic
            @JvmName("clearEmojis")
            fun com.google.protobuf.kotlin.DslList<String, EmojisProxy>.clear() {
                _builder.clearEmojis()
            }
        }
    }

    @JvmName("-initializeemojiFrecency")
    inline fun emojiFrecency(block: EmojiFrecencyKt.Dsl.() -> Unit): FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency =
        EmojiFrecencyKt.Dsl._create(
            FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency.newBuilder()
        ).apply {
            block()
        }._build()

    /**
     * Protobuf type `FrecencyUserSettings.EmojiFrecency`
     */
    object EmojiFrecencyKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency.Builder) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency.Builder): Dsl = Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            class EmojisProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> emojis = 1;`
             */
            val emojis:
                com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, EmojisProxy>
                @JvmSynthetic
                @JvmName("getEmojisMap")
                get() = com.google.protobuf.kotlin.DslMap(
                    _builder.emojisMap
                )

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> emojis = 1;`
             */
            @JvmName("putEmojis")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, EmojisProxy>.put(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                _builder.putEmojis(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> emojis = 1;`
             */
            @JvmSynthetic
            @JvmName("setEmojis")
            @Suppress("NOTHING_TO_INLINE")
            inline operator fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, EmojisProxy>.set(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                put(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> emojis = 1;`
             */
            @JvmSynthetic
            @JvmName("removeEmojis")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, EmojisProxy>.remove(
                key: String
            ) {
                _builder.removeEmojis(key)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> emojis = 1;`
             */
            @JvmSynthetic
            @JvmName("putAllEmojis")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, EmojisProxy>.putAll(
                map: Map<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem>
            ) {
                _builder.putAllEmojis(map)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> emojis = 1;`
             */
            @JvmSynthetic
            @JvmName("clearEmojis")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, EmojisProxy>.clear() {
                _builder.clearEmojis()
            }
        }
    }

    @JvmName("-initializeapplicationCommandFrecency")
    inline fun applicationCommandFrecency(
        block: ApplicationCommandFrecencyKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency = ApplicationCommandFrecencyKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.ApplicationCommandFrecency`
     */
    object ApplicationCommandFrecencyKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            class ApplicationCommandsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> application_commands = 1;`
             */
            val applicationCommands:
                com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationCommandsProxy>
                @JvmSynthetic
                @JvmName("getApplicationCommandsMap")
                get() = com.google.protobuf.kotlin.DslMap(
                    _builder.applicationCommandsMap
                )

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> application_commands = 1;`
             */
            @JvmName("putApplicationCommands")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationCommandsProxy>.put(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                _builder.putApplicationCommands(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> application_commands = 1;`
             */
            @JvmSynthetic
            @JvmName("setApplicationCommands")
            @Suppress("NOTHING_TO_INLINE")
            inline operator fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationCommandsProxy>.set(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                put(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> application_commands = 1;`
             */
            @JvmSynthetic
            @JvmName("removeApplicationCommands")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationCommandsProxy>.remove(
                key: String
            ) {
                _builder.removeApplicationCommands(key)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> application_commands = 1;`
             */
            @JvmSynthetic
            @JvmName("putAllApplicationCommands")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationCommandsProxy>.putAll(
                map: Map<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem>
            ) {
                _builder.putAllApplicationCommands(map)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> application_commands = 1;`
             */
            @JvmSynthetic
            @JvmName("clearApplicationCommands")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationCommandsProxy>.clear() {
                _builder.clearApplicationCommands()
            }
        }
    }

    @JvmName("-initializefavoriteSoundboardSounds")
    inline fun favoriteSoundboardSounds(
        block: FavoriteSoundboardSoundsKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds = FavoriteSoundboardSoundsKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.FavoriteSoundboardSounds`
     */
    object FavoriteSoundboardSoundsKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            class SoundIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * <code>repeated fixed64 sound_ids = 1;</code>
             */
            val soundIds: com.google.protobuf.kotlin.DslList<Long, SoundIdsProxy>
                @JvmSynthetic
                get() = com.google.protobuf.kotlin.DslList(
                    _builder.soundIdsList
                )

            /**
             * `repeated fixed64 sound_ids = 1;`
             * @param value The soundIds to add.
             */
            @JvmSynthetic
            @JvmName("addSoundIds")
            fun com.google.protobuf.kotlin.DslList<Long, SoundIdsProxy>.add(value: Long) {
                _builder.addSoundIds(value)
            }

            /**
             * `repeated fixed64 sound_ids = 1;`
             * @param value The soundIds to add.
             */
            @JvmSynthetic
            @JvmName("plusAssignSoundIds")
            @Suppress("NOTHING_TO_INLINE")
            inline operator fun com.google.protobuf.kotlin.DslList<Long, SoundIdsProxy>.plusAssign(value: Long) {
                add(value)
            }

            /**
             * `repeated fixed64 sound_ids = 1;`
             * @param values The soundIds to add.
             */
            @JvmSynthetic
            @JvmName("addAllSoundIds")
            fun com.google.protobuf.kotlin.DslList<Long, SoundIdsProxy>.addAll(values: Iterable<Long>) {
                _builder.addAllSoundIds(values)
            }

            /**
             * `repeated fixed64 sound_ids = 1;`
             * @param values The soundIds to add.
             */
            @JvmSynthetic
            @JvmName("plusAssignAllSoundIds")
            @Suppress("NOTHING_TO_INLINE")
            inline operator fun com.google.protobuf.kotlin.DslList<Long, SoundIdsProxy>.plusAssign(values: Iterable<Long>) {
                addAll(values)
            }

            /**
             * `repeated fixed64 sound_ids = 1;`
             * @param index The index to set the value at.
             * @param value The soundIds to set.
             */
            @JvmSynthetic
            @JvmName("setSoundIds")
            operator fun com.google.protobuf.kotlin.DslList<Long, SoundIdsProxy>.set(index: Int, value: Long) {
                _builder.setSoundIds(index, value)
            }

            /**
             * `repeated fixed64 sound_ids = 1;`
             */
            @JvmSynthetic
            @JvmName("clearSoundIds")
            fun com.google.protobuf.kotlin.DslList<Long, SoundIdsProxy>.clear() {
                _builder.clearSoundIds()
            }
        }
    }

    @JvmName("-initializeapplicationFrecency")
    inline fun applicationFrecency(
        block: ApplicationFrecencyKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency = ApplicationFrecencyKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.ApplicationFrecency`
     */
    object ApplicationFrecencyKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            class ApplicationsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> applications = 1;`
             */
            val applications:
                com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationsProxy>
                @JvmSynthetic
                @JvmName("getApplicationsMap")
                get() = com.google.protobuf.kotlin.DslMap(
                    _builder.applicationsMap
                )

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> applications = 1;`
             */
            @JvmName("putApplications")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationsProxy>.put(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                _builder.putApplications(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> applications = 1;`
             */
            @JvmSynthetic
            @JvmName("setApplications")
            @Suppress("NOTHING_TO_INLINE")
            inline operator fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationsProxy>.set(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                put(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> applications = 1;`
             */
            @JvmSynthetic
            @JvmName("removeApplications")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationsProxy>.remove(
                key: String
            ) {
                _builder.removeApplications(key)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> applications = 1;`
             */
            @JvmSynthetic
            @JvmName("putAllApplications")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationsProxy>.putAll(
                map: Map<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem>
            ) {
                _builder.putAllApplications(map)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> applications = 1;`
             */
            @JvmSynthetic
            @JvmName("clearApplications")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, ApplicationsProxy>.clear() {
                _builder.clearApplications()
            }
        }
    }

    @JvmName("-initializeheardSoundFrecency")
    inline fun heardSoundFrecency(
        block: HeardSoundFrecencyKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency = HeardSoundFrecencyKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.HeardSoundFrecency`
     */
    object HeardSoundFrecencyKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            class HeardSoundsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> heard_sounds = 1;`
             */
            val heardSounds:
                com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, HeardSoundsProxy>
                @JvmSynthetic
                @JvmName("getHeardSoundsMap")
                get() = com.google.protobuf.kotlin.DslMap(
                    _builder.heardSoundsMap
                )

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> heard_sounds = 1;`
             */
            @JvmName("putHeardSounds")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, HeardSoundsProxy>.put(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                _builder.putHeardSounds(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> heard_sounds = 1;`
             */
            @JvmSynthetic
            @JvmName("setHeardSounds")
            @Suppress("NOTHING_TO_INLINE")
            inline operator fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, HeardSoundsProxy>.set(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                put(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> heard_sounds = 1;`
             */
            @JvmSynthetic
            @JvmName("removeHeardSounds")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, HeardSoundsProxy>.remove(
                key: String
            ) {
                _builder.removeHeardSounds(key)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> heard_sounds = 1;`
             */
            @JvmSynthetic
            @JvmName("putAllHeardSounds")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, HeardSoundsProxy>.putAll(
                map: Map<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem>
            ) {
                _builder.putAllHeardSounds(map)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> heard_sounds = 1;`
             */
            @JvmSynthetic
            @JvmName("clearHeardSounds")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, HeardSoundsProxy>.clear() {
                _builder.clearHeardSounds()
            }
        }
    }

    @JvmName("-initializeplayedSoundFrecency")
    inline fun playedSoundFrecency(
        block: PlayedSoundFrecencyKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency = PlayedSoundFrecencyKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.PlayedSoundFrecency`
     */
    object PlayedSoundFrecencyKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            class PlayedSoundsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> played_sounds = 1;`
             */
            val playedSounds:
                com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, PlayedSoundsProxy>
                @JvmSynthetic
                @JvmName("getPlayedSoundsMap")
                get() = com.google.protobuf.kotlin.DslMap(
                    _builder.playedSoundsMap
                )

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> played_sounds = 1;`
             */
            @JvmName("putPlayedSounds")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, PlayedSoundsProxy>.put(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                _builder.putPlayedSounds(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> played_sounds = 1;`
             */
            @JvmSynthetic
            @JvmName("setPlayedSounds")
            @Suppress("NOTHING_TO_INLINE")
            inline operator fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, PlayedSoundsProxy>.set(
                key: String,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                put(key, value)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> played_sounds = 1;`
             */
            @JvmSynthetic
            @JvmName("removePlayedSounds")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, PlayedSoundsProxy>.remove(
                key: String
            ) {
                _builder.removePlayedSounds(key)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> played_sounds = 1;`
             */
            @JvmSynthetic
            @JvmName("putAllPlayedSounds")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, PlayedSoundsProxy>.putAll(
                map: Map<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem>
            ) {
                _builder.putAllPlayedSounds(map)
            }

            /**
             * `map<string, .FrecencyUserSettings.FrecencyItem> played_sounds = 1;`
             */
            @JvmSynthetic
            @JvmName("clearPlayedSounds")
            fun com.google.protobuf.kotlin.DslMap<String, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, PlayedSoundsProxy>.clear() {
                _builder.clearPlayedSounds()
            }
        }
    }

    @JvmName("-initializeguildAndChannelFrecency")
    inline fun guildAndChannelFrecency(
        block: GuildAndChannelFrecencyKt.Dsl.() -> Unit
    ): FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency = GuildAndChannelFrecencyKt.Dsl._create(
        FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency.newBuilder()
    ).apply {
        block()
    }._build()

    /**
     * Protobuf type `FrecencyUserSettings.GuildAndChannelFrecency`
     */
    object GuildAndChannelFrecencyKt {
        @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        @com.google.protobuf.kotlin.ProtoDslMarker
        class Dsl private constructor(
            private val _builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency.Builder
        ) {
            companion object {
                @JvmSynthetic
                @PublishedApi
                internal fun _create(builder: FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency.Builder): Dsl =
                    Dsl(builder)
            }

            @JvmSynthetic
            @PublishedApi
            internal fun _build(): FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency = _builder.build()

            /**
             * An uninstantiable, behaviorless type to represent the field in
             * generics.
             */
            @OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
            class GuildAndChannelsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> guild_and_channels = 1;`
             */
            val guildAndChannels:
                com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, GuildAndChannelsProxy>
                @JvmSynthetic
                @JvmName("getGuildAndChannelsMap")
                get() = com.google.protobuf.kotlin.DslMap(
                    _builder.guildAndChannelsMap
                )

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> guild_and_channels = 1;`
             */
            @JvmName("putGuildAndChannels")
            fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, GuildAndChannelsProxy>.put(
                key: Long,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                _builder.putGuildAndChannels(key, value)
            }

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> guild_and_channels = 1;`
             */
            @JvmSynthetic
            @JvmName("setGuildAndChannels")
            @Suppress("NOTHING_TO_INLINE")
            inline operator fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, GuildAndChannelsProxy>.set(
                key: Long,
                value: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem
            ) {
                put(key, value)
            }

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> guild_and_channels = 1;`
             */
            @JvmSynthetic
            @JvmName("removeGuildAndChannels")
            fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, GuildAndChannelsProxy>.remove(
                key: Long
            ) {
                _builder.removeGuildAndChannels(key)
            }

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> guild_and_channels = 1;`
             */
            @JvmSynthetic
            @JvmName("putAllGuildAndChannels")
            fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, GuildAndChannelsProxy>.putAll(
                map: Map<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem>
            ) {
                _builder.putAllGuildAndChannels(map)
            }

            /**
             * `map<fixed64, .FrecencyUserSettings.FrecencyItem> guild_and_channels = 1;`
             */
            @JvmSynthetic
            @JvmName("clearGuildAndChannels")
            fun com.google.protobuf.kotlin.DslMap<Long, FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem, GuildAndChannelsProxy>.clear() {
                _builder.clearGuildAndChannels()
            }
        }
    }
}

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.copy(
    block: FrecencyUserSettingsKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings = FrecencyUserSettingsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions.copy(
    block: FrecencyUserSettingsKt.VersionsKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions =
    FrecencyUserSettingsKt.VersionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF.copy(
    block: FrecencyUserSettingsKt.FavoriteGIFKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIF =
    FrecencyUserSettingsKt.FavoriteGIFKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs.copy(
    block: FrecencyUserSettingsKt.FavoriteGIFsKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs =
    FrecencyUserSettingsKt.FavoriteGIFsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers.copy(
    block: FrecencyUserSettingsKt.FavoriteStickersKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers =
    FrecencyUserSettingsKt.FavoriteStickersKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem.copy(
    block: FrecencyUserSettingsKt.FrecencyItemKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FrecencyItem =
    FrecencyUserSettingsKt.FrecencyItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency.copy(
    block: FrecencyUserSettingsKt.StickerFrecencyKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency =
    FrecencyUserSettingsKt.StickerFrecencyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis.copy(
    block: FrecencyUserSettingsKt.FavoriteEmojisKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis =
    FrecencyUserSettingsKt.FavoriteEmojisKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency.copy(
    block: FrecencyUserSettingsKt.EmojiFrecencyKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency =
    FrecencyUserSettingsKt.EmojiFrecencyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency.copy(
    block: FrecencyUserSettingsKt.ApplicationCommandFrecencyKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency =
    FrecencyUserSettingsKt.ApplicationCommandFrecencyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds.copy(
    block: FrecencyUserSettingsKt.FavoriteSoundboardSoundsKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds =
    FrecencyUserSettingsKt.FavoriteSoundboardSoundsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency.copy(
    block: FrecencyUserSettingsKt.ApplicationFrecencyKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency =
    FrecencyUserSettingsKt.ApplicationFrecencyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency.copy(
    block: FrecencyUserSettingsKt.HeardSoundFrecencyKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency =
    FrecencyUserSettingsKt.HeardSoundFrecencyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency.copy(
    block: FrecencyUserSettingsKt.PlayedSoundFrecencyKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency =
    FrecencyUserSettingsKt.PlayedSoundFrecencyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

inline fun FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency.copy(
    block: FrecencyUserSettingsKt.GuildAndChannelFrecencyKt.Dsl.() -> Unit
): FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency =
    FrecencyUserSettingsKt.GuildAndChannelFrecencyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.versionsOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.Versions?
    get() = if (hasVersions()) getVersions() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.favoriteGifsOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteGIFs?
    get() = if (hasFavoriteGifs()) getFavoriteGifs() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.favoriteStickersOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteStickers?
    get() = if (hasFavoriteStickers()) getFavoriteStickers() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.stickerFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.StickerFrecency?
    get() = if (hasStickerFrecency()) getStickerFrecency() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.favoriteEmojisOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteEmojis?
    get() = if (hasFavoriteEmojis()) getFavoriteEmojis() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.emojiFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency?
    get() = if (hasEmojiFrecency()) getEmojiFrecency() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.applicationCommandFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationCommandFrecency?
    get() = if (hasApplicationCommandFrecency()) getApplicationCommandFrecency() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.favoriteSoundboardSoundsOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.FavoriteSoundboardSounds?
    get() = if (hasFavoriteSoundboardSounds()) getFavoriteSoundboardSounds() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.applicationFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.ApplicationFrecency?
    get() = if (hasApplicationFrecency()) getApplicationFrecency() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.heardSoundFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.HeardSoundFrecency?
    get() = if (hasHeardSoundFrecency()) getHeardSoundFrecency() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.playedSoundFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.PlayedSoundFrecency?
    get() = if (hasPlayedSoundFrecency()) getPlayedSoundFrecency() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.guildAndChannelFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.GuildAndChannelFrecency?
    get() = if (hasGuildAndChannelFrecency()) getGuildAndChannelFrecency() else null

val FrecencyUserSettingsOuterClass.FrecencyUserSettingsOrBuilder.emojiReactionFrecencyOrNull: FrecencyUserSettingsOuterClass.FrecencyUserSettings.EmojiFrecency?
    get() = if (hasEmojiReactionFrecency()) getEmojiReactionFrecency() else null